{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://test/./src/js/http-request.js","webpack://test/./src/index.js"],"sourcesContent":["const noop = () => {};\n\nexport function httpRequest({\n\tmethod = 'GET',\n\turl,\n\ttype = 'json',\n\tonSuccess = noop,\n\tonError = noop,\n}) {\n\tconst request = new XMLHttpRequest();\n\n\trequest.open(method, url);\n\trequest.responseType = type;\n\trequest.send();\n\n\trequest.addEventListener('load', () => {\n\t\tif (request.status === 200) {\n\t\t\tonSuccess(request.response);\n\t\t} else {\n\t\t\tonError(request.response || 'Неизвестная ошибка');\n\t\t}\n\t});\n\n\trequest.addEventListener('error', () => {\n\t\tonError('Сеть недоступна');\n\t});\n}\n","import './js/style.css';\nimport { httpRequest } from './js/http-request.js';\nimport nationalities from './js/nationalities.json';\nimport 'animate.css';\n\nconst months = {\n\t1: 'January ',\n\t2: 'February ',\n\t3: 'March ',\n\t4: 'April ',\n\t5: 'May ',\n\t6: 'June ',\n\t7: 'July ',\n\t8: 'August ',\n\t9: 'September ',\n\t10: 'October ',\n\t11: 'November ',\n\t12: 'December ',\n};\n\nfunction generateDate(id, inner) {\n\tlet options = document.createElement('option');\n\tdocument.getElementById(id).appendChild(options).innerHTML = inner;\n}\n\nfor (let year = 1950; year <= 2015; year++) generateDate('year-birth', year);\n\nfor (let day = 1; day <= 31; day++) generateDate('day-birth', day);\n\nfor (let month in months) generateDate('month-birth', months[month]);\n\nnationalities.nationalities.forEach((nat) => {\n\tgenerateDate('nationality', nat);\n});\n\nconst errorMessages = {\n\t'first-name': {\n\t\tvalueMissing: 'Представьтесь, пожалуйста',\n\t\tpatternMismatch: 'Что-то не похоже на имя',\n\t},\n\n\t'last-name': {\n\t\tvalueMissing: 'Представьтесь, пожалуйста',\n\t\tpatternMismatch: 'Что-то не похоже на фамилию',\n\t},\n\n\temail: {\n\t\tvalueMissing: 'Предоставьте почту',\n\t\ttypeMismatch: 'Что-то не очень похоже на почту',\n\t\tpatternMismatch: 'Почта невалидна',\n\t},\n\n\tpassword: {\n\t\tvalueMissing: 'Введите пароль',\n\t\tpatternMismatch:\n\t\t\t'Пароль пользователя должен содержать от 8 символов и как минимум 1 заглавную букву, 1 строчную и 1 цифру',\n\t},\n};\n\nfunction hideError(fieldInput) {\n\tconst field = fieldInput.closest('.field');\n\tconst fieldError = field.querySelector('.field__error');\n\n\tfieldError.classList.add('field__error_hidden');\n}\n\nfunction showError(fieldInput, error) {\n\tconst field = fieldInput.closest('.field');\n\tconst fieldError = field.querySelector('.field__error');\n\n\tfieldError.textContent = error;\n\n\tfieldError.classList.remove('field__error_hidden');\n}\n\nfunction validateInput(fieldInput) {\n\thideError(fieldInput);\n\n\tif (!fieldInput.validity.valid) {\n\t\tconst error = Object.keys(ValidityState.prototype).find((key) => {\n\t\t\tif (key === 'valid') return false;\n\n\t\t\treturn fieldInput.validity[key];\n\t\t});\n\n\t\tfieldInput.classList.add(\n\t\t\t'invalid:border-[#FF2222]',\n\t\t\t'invalid:text-[#FF2222]',\n\t\t\t'invalid:border-b-2'\n\t\t);\n\n\t\tconsole.log(error);\n\n\t\tshowError(fieldInput, errorMessages[fieldInput.name][error]);\n\t}\n}\n\nconst form = document.querySelector('.form');\nconst formFieldInputs = form.querySelectorAll('.field__input');\n\nformFieldInputs.forEach((formField) => {\n\tformField.addEventListener('change', (event) => {\n\t\tconst target = event.target;\n\n\t\ttarget.dataset.dirty = 'true';\n\n\t\tvalidateInput(target);\n\t});\n\n\tformField.addEventListener('input', (event) => {\n\t\tconst target = event.target;\n\n\t\tif (target.dataset.dirty) {\n\t\t\tvalidateInput(target);\n\t\t}\n\t});\n});\n\nconst Pass = form.querySelector('.form__password');\nconst confirmPass = form.querySelector('.form__confirm-password');\nconst passEror = form.querySelector('.error_pass');\nconst submitBtn = form.querySelector('.submit-btn');\n\nconfirmPass.addEventListener('input', () => {\n\tif (Pass.value !== confirmPass.value) {\n\t\tpassEror.textContent = 'Пароли не совпадают';\n\t\tpassEror.style.color = 'lightcoral';\n\t} else {\n\t\tpassEror.textContent = 'Пароли совпадают';\n\t\tpassEror.style.color = 'green';\n\t}\n});\n\nPass.addEventListener('input', function () {\n\tthis.value !== confirmPass.value\n\t\t? confirmPass.setCustomValidity('Пароли не совпадают')\n\t\t: confirmPass.setCustomValidity('');\n});\n\nconfirmPass.addEventListener('input', function () {\n\tthis.value !== Pass.value\n\t\t? this.setCustomValidity('Пароли не совпадают')\n\t\t: this.setCustomValidity('');\n\n\t!confirmPass.checkValidity() && submitBtn.click();\n});\n\nsubmitBtn.addEventListener('click', function (e) {\n\tPass.value === '' && e.preventDefault();\n});\n\nfunction showData(data) {\n\tconst status = data.status;\n\tif (status === 'ok') {\n\t\tform.reset();\n\t\tconst modalRegister = document.getElementById('my-modal-6');\n\t\tconst closeModalBtn = document.querySelector('.btn-close-modal');\n\t\tmodalRegister.checked = true;\n\t\t//comment out if don't make request in confirm.html\n\t\tcloseModalBtn.addEventListener('click', () => {\n\t\t\thttpRequest({\n\t\t\t\turl: './confirm.html',\n\t\t\t\ttype: 'text',\n\t\t\t\tonSuccess: (data) => {\n\t\t\t\t\tdocument.body.innerHTML = data;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t} else if (status === 'error') {\n\t\talert('Ошибка авторизации');\n\t\tanimateCSS('.submit-btn', 'wobble');\n\t} else {\n\t\talert('Нет доступа');\n\t\tanimateCSS('.submit-btn', 'wobble');\n\t}\n}\n\nform.addEventListener('submit', (event) => {\n\tevent.preventDefault();\n\n\tconst formElement = event.target;\n\tconst fieldInputs = formElement.querySelectorAll('.field__input');\n\n\tif (formElement.checkValidity()) {\n\t\tconsole.log('success!');\n\t\thttpRequest({\n\t\t\turl: '../static/status-ok.json',\n\t\t\tonSuccess: (data) => {\n\t\t\t\tshowData(data);\n\t\t\t},\n\n\t\t\tonError: (data) => {\n\t\t\t\tshowData(data);\n\t\t\t},\n\t\t});\n\t}\n\n\tfieldInputs.forEach(validateInput);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst formFields = form.querySelectorAll('.form__field');\n\n\tfor (let i = 0; i < formFields.length; i++) {\n\t\tformFields[i].classList.add(\n\t\t\t'animate__animated',\n\t\t\t'animate__fadeInUp',\n\t\t\t`animate__delay-${i}s`\n\t\t);\n\t}\n});\n\nconst animateCSS = (element, animation, prefix = 'animate__') =>\n\t// We create a Promise and return it\n\t// eslint-disable-next-line no-unused-vars\n\tnew Promise((resolve, reject) => {\n\t\tconst animationName = `${prefix}${animation}`;\n\t\tconst node = document.querySelector(element);\n\n\t\tnode.classList.add(`${prefix}animated`, animationName);\n\n\t\t// When the animation ends, we clean the classes and resolve the Promise\n\t\tfunction handleAnimationEnd(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tnode.classList.remove(`${prefix}animated`, animationName);\n\t\t\tresolve('Animation ended');\n\t\t}\n\n\t\tnode.addEventListener('animationend', handleAnimationEnd, {\n\t\t\tonce: true,\n\t\t});\n\t});\n"],"names":["noop","httpRequest","method","url","type","onSuccess","onError","request","XMLHttpRequest","open","responseType","send","addEventListener","status","response","months","generateDate","id","inner","options","document","createElement","getElementById","appendChild","innerHTML","year","day","month","nationalities","nat","errorMessages","valueMissing","patternMismatch","email","typeMismatch","password","validateInput","fieldInput","closest","querySelector","classList","add","hideError","validity","valid","error","Object","keys","ValidityState","prototype","find","key","console","log","fieldError","textContent","remove","showError","name","form","querySelectorAll","forEach","formField","event","target","dataset","dirty","Pass","confirmPass","passEror","submitBtn","showData","data","reset","modalRegister","closeModalBtn","checked","body","alert","animateCSS","value","style","color","this","setCustomValidity","checkValidity","click","e","preventDefault","formElement","fieldInputs","formFields","i","length","element","animation","prefix","Promise","resolve","reject","animationName","node","stopPropagation","once"],"sourceRoot":""}